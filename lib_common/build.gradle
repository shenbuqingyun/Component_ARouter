apply plugin: 'com.android.library'

def config = rootProject.ext

android {
    compileSdkVersion config.android.compileSdkVersion
    buildToolsVersion config.android.buildToolsVersion

    defaultConfig {
        minSdkVersion config.android.minSdkVersion
        targetSdkVersion config.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME : project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation config.dependencies["support-v7"]
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // ARouter
    compile config.dependencies["arouter-api"]
    annotationProcessor config.dependencies["arouter-compiler"]
    // Dragger2
    api config.dependencies["dagger"]
    annotationProcessor config.dependencies["dagger-compiler"]
    // OkHttp
    implementation config.dependencies["okhttp"]
    implementation config.dependencies["okhttpfinal"]
    // Rxjava + Retrofit
    implementation config.dependencies["retrofit"]
    implementation config.dependencies["retrofit_gson"]
    implementation config.dependencies["rxjava_retrofit"]
    implementation config.dependencies["rxandroid"]
    implementation config.dependencies["rxjava"]
}
